buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'org.ajoberstar:gradle-git:1.3.2'
    }
}
apply plugin: 'com.android.library'
android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile "com.android.support:support-v4:23.1.0"
}

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        mavenCentral()
    }
}

import org.ajoberstar.grgit.Grgit

project.ext.vlcAndroidSource = file('vlc-android')
project.ext.vlcSource = file('vlc-android/vlc')

task cloneVlcAndroid << {
    Grgit.clone(uri: 'http://git.videolan.org/git/vlc-ports/android.git',
            dir: project.ext.vlcAndroidSource)
}

// Only clone once.
cloneVlcAndroid.onlyIf { !project.ext.vlcAndroidSource.exists() }

task updateVlcCheckout(dependsOn: 'cloneVlcAndroid') << {
    try {
        def repo = Grgit.open(project.ext.vlcSource)
        repo.pull(rebase: true)
    }
    catch (RuntimeException e) {
        logger.warn("Wasn't able to update checkout at " + project.ext.vlcSource + ": "
                + e.getClass() + " - " + e.getLocalizedMessage());
    }
}

// Don't update vlc checkout if it doesn't exist yet.
// This is the case when we're building for the first time.
updateVlcCheckout.onlyIf { project.ext.vlcSource.exists() }

task purgeOldFiles(type: Delete, dependsOn: 'updateVlcCheckout') {
    delete "src/main"
}

task compileVlcArmv7a(type: Exec, dependsOn: 'purgeOldFiles') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "armeabi-v7a"
    args "release" // Remove this to build a debug libvlc
}

task buildVlcArmv7a(type: Copy, dependsOn: 'compileVlcArmv7a') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/jni/libs/armeabi-v7a/')
    into('src/main/jniLibs/armeabi-v7a/')
}

task compileVlcX86(type: Exec, dependsOn: 'buildVlcArmv7a') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "x86"
    args "release" // Remove this to build a debug libvlc
}

task buildVlcX86(type: Copy, dependsOn: 'compileVlcX86') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/jni/libs/x86/')
    into('src/main/jniLibs/x86/')
}

task compileVlcArm(type: Exec, dependsOn: 'buildVlcX86') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "armeabi"
    args "release" // Remove this to build a debug libvlc
}

task buildVlcArm(type: Copy, dependsOn: 'compileVlcArm') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/jni/libs/armeabi/')
    into('src/main/jniLibs/armeabi/')
}

task buildVlc(type: Copy, dependsOn: 'buildVlcArm') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/src/')
    into('src/main/java')
}

//upload aar to maven central with sonatype
apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/8cfffbbff6b9094af1c92318ea5d5a5bb0b8bb30/gradle-mvn-push.gradle'
