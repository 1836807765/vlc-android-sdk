buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.1'
        classpath 'org.ajoberstar:gradle-git:0.8.0'
    }
}
apply plugin: 'android-library'
android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        mavenCentral()
    }
}

import org.ajoberstar.grgit.*

project.ext.androidAbi = System.getenv()['ANDROID_ABI']
project.ext.vlcSource = file('vlc-android-' + project.ext.androidAbi)

task cloneVlcAndroid << {
    Grgit.clone(uri: 'http://git.videolan.org/git/vlc-ports/android.git', dir: project.ext.vlcSource)
}

// Only clone once.
cloneVlcAndroid.onlyIf { !project.ext.vlcSource.exists() }

task updateVlcCheckout(dependsOn: 'cloneVlcAndroid') << {
    def repo = Grgit.open(project.ext.vlcSource)
    repo.pull(rebase: true)
}

task buildVlc(type: Exec, dependsOn: 'updateVlcCheckout') {
    workingDir project.ext.vlcSource
    commandLine './compile.sh'
}

task updateVlc(type: Copy, dependsOn: 'buildVlc') {
    from ('vlc-android-' + project.ext.androidAbi + '/vlc-android/libs/' + project.ext.androidAbi + '/libvlcjni.so')
    into ('src/main/jniLibs/' + project.ext.androidAbi)
}

//upload aar to maven central with sonatype
apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/eaa6b5404b7594e6c23b884fdc5795f545db55dd/gradle-mvn-push.gradle'
